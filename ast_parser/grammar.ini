# ini for intellisense
# only as documentation, it's not for parser generator
# only grammar that in use now

#STATEMENTS
statements = {statement} ;
statement = assign | func_run;
assign  = ident, "=", expr ;
func_run = ident, "(", expr, ")"; #temporaly

#EXPRESSIONS
expr    = term, { ("+" | "-"), term } ;
term    = factor, { ("*" | "/"), factor } ;
factor  = "-", unsigned_factor | unsigned_factor | string;
unsigned_factor = pow ;
pow = primary [** pow ]; #right recursion
primary = number | ident | "(", expr, ")";

#BASE TYPES
number  = digit, { digit } ;

string = double_quoted | single_quoted | backtick_quoted ;
double_quoted = '"', { character - '"' }, '"' ;
single_quoted = "'", { character - "'" }, "'" ;
backtick_quoted = "`", { character - "`" }, "`" ;

ident   = letter, { letter | digit } ;
letter  = "a".."z" | "A".."Z" | "_" ;
digit   = "0".."9" ;

char = ? #all user chars
